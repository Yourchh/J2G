Cargando archivo de tabla de símbolos: J2G/AnalizadorLexicoJ2G/tabsim.txt
Se cargó el archivo J2G/AnalizadorLexicoJ2G/entrada.txt el cual se está analizando.

INICIANDO PROCESAMIENTO DEL CÓDIGO

RESULTADO DE LA FASE 1:
Se eliminan comentarios y se tokeniza el código.

FUNC J2G Main (){
  INT a := 10;
  INT b := 5;
  INT c := 20;
  INT d := 10;
  INT resultado;
  STR mensaje := "Hola";
  BOOL esValido := TRUE;
  INT var1 := "23";
  BOOL var2 := 23;
  STR var62 := TRUE;
  if (((a + 5) * 100) > d && a <= 10 || b != c){
    Print ("Se cumplió la condición 1");
  }
  if (! ((a - b / 2) == 0) || (a + b) == d && c >= 10){
    Print ("Se cumplió la condición 2");
  }
  if (((a * 2) + c) > 30 || ! (a - b <= c) && d == 10){
    Print ("Se cumplió la condición 3");
  }
  if (((a + 15) / c - d) == a || 4 <= c && ! (d >= a)){
    Print ("Se cumplió la condición 4");
  }
  if ((a + b - mensaje) * (a / 5) <= 10 && a == b || esValido != FALSE){
    Print ("Esta condición tiene un error semántico");
  }
  if ((a * b + 50 != 10 && (esValido) > b || a <= 20)){
    Print ("Esta condición tiene un error semántico");
  }
  if ((a * 2 + esValido) != 30 && (b - 1) > 0 || a <= 10){
    Print ("Esta condición tiene un error semántico");
  }
}

RESULATDO DE LA FASE 2:
Se transforman los tokens a IDs y se muestran las nuevas variables detectadas.


Validación de estructura del código (reglas internas):
FUNC J2G Main (){
  INT id1 := id2;
  INT id3 := id4;
  INT id5 := id6;
  INT id7 := id2;
  INT id8;
  STR id9 := id10;
  BOOL id11 := TRUE;
  INT id12 := id13;
  BOOL id14 := id15;
  STR id16 := TRUE;
  if (((id1 + id4) * id17) > id7 && id1 <= id2 || id3 != id5){
    Print (id18);
  }
  if (! ((id1 - id3 / id19) == id20) || (id1 + id3) == id7 && id5 >= id2){
    Print (id21);
  }
  if (((id1 * id19) + id5) > id22 || ! (id1 - id3 <= id5) && id7 == id2){
    Print (id23);
  }
  if (((id1 + id24) / id5 - id7) == id1 || id25 <= id5 && ! (id7 >= id1)){
    Print (id26);
  }
  if ((id1 + id3 - id9) * (id1 / id4) <= id2 && id1 == id3 || id11 != FALSE){
    Print (id27);
  }
  if ((id1 * id3 + id28 != id2 && (id11) > id3 || id1 <= id6)){
    Print (id27);
  }
  if ((id1 * id19 + id11) != id22 && (id3 - id29) > id20 || id1 <= id2){
    Print (id27);
  }
}

NUEVA TABLA DE SÍMBOLOS:

--------------------------------------------------------------------------------------------------------------
VARIABLE                                 | ID         | TIPO       | VALOR                                   
--------------------------------------------------------------------------------------------------------------
a                                        | id1        | int        | id2                                     
10                                       | id2        | int        | 10                                      
b                                        | id3        | int        | id4                                     
5                                        | id4        | int        | 5                                       
c                                        | id5        | int        | id6                                     
20                                       | id6        | int        | 20                                      
d                                        | id7        | int        | id2                                     
resultado                                | id8        | int        | resultado                               
"Hola"                                   | id10       | string     | Hola                                    
esValido                                 | id11       | bool       | TRUE                                    
var1                                     | id12       | int        | var1                                    
var2                                     | id14       | bool       | id14                                    
var62                                    | id16       | string     | id16                                    
100                                      | id17       | int        | 100                                     
"Se cumplió la condición 1"              | id18       | string     | Se cumplió la condición 1               
2                                        | id19       | int        | 2                                       
0                                        | id20       | int        | 0                                       
"Se cumplió la condición 2"              | id21       | string     | Se cumplió la condición 2               
30                                       | id22       | int        | 30                                      
"Se cumplió la condición 3"              | id23       | string     | Se cumplió la condición 3               
15                                       | id24       | int        | 15                                      
4                                        | id25       | int        | 4                                       
"Se cumplió la condición 4"              | id26       | string     | Se cumplió la condición 4               
"Esta condición tiene un error semántico" | id27       | string     | Esta condición tiene un error semántico 
50                                       | id28       | int        | 50                                      
1                                        | id29       | int        | 1                                       
mensaje                                  | id9        | str        | id10                                    
----------
